plugins {
    id 'com.android.application'
}

//apply from: "plugin-bytex.gradle"

android {
    compileSdkVersion 32
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.hss01248.aop_bytex_demo"
        minSdkVersion 19
        targetSdkVersion 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation project(path: ':dynamicproxy-android')
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}
configurations {
    all*.exclude group: 'androidx.viewpager', module: 'viewpager'

    all {
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
        // resolutionStrategy.cacheChangingModulesFor 4, 'hours'
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }
}

afterEvaluate {
    // 1. 找到需要依赖自己 Task的构建流程的Task
    def uploadArchives = tasks.findByName("assembleDebug")

    //示例2: 插入到uploadArchives之前:
    def task2 = tasks.findByName("clean")
    // 2. 通过dependsOn 方法，插入到指定Task之前
    if (uploadArchives != null) {
        uploadArchives.dependsOn(task2)
    }

}